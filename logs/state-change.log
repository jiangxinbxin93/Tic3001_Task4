[2023-04-04 09:57:03,451] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 09:58:22,075] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 09:59:48,456] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:00:12,706] INFO [Controller id=0 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:00:41,528] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:01:03,160] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:01:22,608] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:03:08,462] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:03:24,207] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:03:33,093] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:03:33,093] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-04-04 10:03:49,799] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1) for 0 partitions (state.change.logger)
[2023-04-04 10:03:49,800] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-04-04 10:04:33,663] INFO [Controller id=0 epoch=1] Changed partition TestTopic-4 state from NonExistentPartition to NewPartition with assigned replicas 1,0 (state.change.logger)
[2023-04-04 10:04:33,663] INFO [Controller id=0 epoch=1] Changed partition TestTopic-0 state from NonExistentPartition to NewPartition with assigned replicas 2,0 (state.change.logger)
[2023-04-04 10:04:33,663] INFO [Controller id=0 epoch=1] Changed partition TestTopic-1 state from NonExistentPartition to NewPartition with assigned replicas 1,2 (state.change.logger)
[2023-04-04 10:04:33,663] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 state from NonExistentPartition to NewPartition with assigned replicas 0,1 (state.change.logger)
[2023-04-04 10:04:33,663] INFO [Controller id=0 epoch=1] Changed partition TestTopic-3 state from NonExistentPartition to NewPartition with assigned replicas 2,1 (state.change.logger)
[2023-04-04 10:04:33,663] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:04:33,667] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:04:33,698] INFO [Controller id=0 epoch=1] Changed partition TestTopic-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:04:33,698] INFO [Controller id=0 epoch=1] Changed partition TestTopic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:04:33,698] INFO [Controller id=0 epoch=1] Changed partition TestTopic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:04:33,698] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:04:33,698] INFO [Controller id=0 epoch=1] Changed partition TestTopic-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:04:33,701] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 2 become-follower partitions (state.change.logger)
[2023-04-04 10:04:33,702] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 2 become-follower partitions (state.change.logger)
[2023-04-04 10:04:33,703] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 2 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:04:33,703] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 5 partitions (state.change.logger)
[2023-04-04 10:04:33,705] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:04:33,709] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 for 3 partitions (state.change.logger)
[2023-04-04 10:04:33,710] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 0 for 4 partitions (state.change.logger)
[2023-04-04 10:04:33,712] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 0 for 3 partitions (state.change.logger)
[2023-04-04 10:04:33,734] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:04:33,743] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 1 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 10:04:33,747] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 0 epoch 1 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 10:04:33,858] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0,1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,874] INFO [Broker id=2] Leader TestTopic-0 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,890] INFO [Broker id=1] Leader TestTopic-1 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,895] INFO [Broker id=0] Follower TestTopic-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,903] INFO [Broker id=2] Leader TestTopic-3 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,912] INFO [Broker id=0] Follower TestTopic-4 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,914] INFO [Broker id=0] Stopped fetchers as part of become-follower request from controller 0 epoch 1 with correlation id 3 for 2 partitions (state.change.logger)
[2023-04-04 10:04:33,920] INFO [Broker id=1] Leader TestTopic-4 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,931] INFO [Broker id=2] Follower TestTopic-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,933] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 1 with correlation id 1 for 1 partitions (state.change.logger)
[2023-04-04 10:04:33,947] INFO [Broker id=1] Follower TestTopic-3 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,965] INFO [Broker id=1] Follower TestTopic-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 0. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:04:33,968] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 0 epoch 1 with correlation id 2 for 2 partitions (state.change.logger)
[2023-04-04 10:04:33,987] INFO [Broker id=0] Finished LeaderAndIsr request in 279ms correlationId 3 from controller 0 for 3 partitions (state.change.logger)
[2023-04-04 10:04:34,007] INFO [Broker id=0] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4 (state.change.logger)
[2023-04-04 10:04:34,019] INFO [Broker id=2] Finished LeaderAndIsr request in 310ms correlationId 1 from controller 0 for 3 partitions (state.change.logger)
[2023-04-04 10:04:34,035] INFO [Broker id=2] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2 (state.change.logger)
[2023-04-04 10:04:34,100] INFO [Broker id=1] Finished LeaderAndIsr request in 390ms correlationId 2 from controller 0 for 4 partitions (state.change.logger)
[2023-04-04 10:04:34,113] INFO [Broker id=1] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 3 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,642] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:05:29,643] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:05:29,644] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:05:29,734] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,735] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,736] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:05:29,737] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:05:29,738] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:05:29,738] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:05:29,738] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 50 partitions (state.change.logger)
[2023-04-04 10:05:29,741] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:05:29,741] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 5 from controller 0 for 16 partitions (state.change.logger)
[2023-04-04 10:05:29,741] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:05:29,742] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:05:29,783] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 0 epoch 1 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-04 10:05:29,790] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 4 from controller 0 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:05:29,792] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:05:29,845] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,873] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,874] INFO [Broker id=2] Leader __consumer_offsets-3 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,876] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,904] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,906] INFO [Broker id=2] Leader __consumer_offsets-18 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,910] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,927] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,936] INFO [Broker id=2] Leader __consumer_offsets-39 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,939] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,954] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,964] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,967] INFO [Broker id=2] Leader __consumer_offsets-9 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,983] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,997] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:29,998] INFO [Broker id=2] Leader __consumer_offsets-24 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,014] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,021] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,031] INFO [Broker id=2] Leader __consumer_offsets-27 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,037] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,050] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,057] INFO [Broker id=2] Leader __consumer_offsets-42 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,067] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,078] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,078] INFO [Broker id=2] Leader __consumer_offsets-12 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,090] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,098] INFO [Broker id=2] Leader __consumer_offsets-33 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,100] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,113] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,120] INFO [Broker id=2] Leader __consumer_offsets-48 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,124] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,138] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,145] INFO [Broker id=2] Leader __consumer_offsets-21 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,148] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,165] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,174] INFO [Broker id=2] Leader __consumer_offsets-36 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,177] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,187] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,195] INFO [Broker id=2] Leader __consumer_offsets-6 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,197] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,207] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,221] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,221] INFO [Broker id=2] Leader __consumer_offsets-45 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,234] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,244] INFO [Broker id=2] Leader __consumer_offsets-15 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,245] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,254] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,266] INFO [Broker id=2] Leader __consumer_offsets-30 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,272] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,289] INFO [Broker id=1] Finished LeaderAndIsr request in 548ms correlationId 4 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:05:30,295] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 5 (state.change.logger)
[2023-04-04 10:05:30,298] INFO [Broker id=2] Leader __consumer_offsets-0 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:05:30,305] INFO [Broker id=0] Finished LeaderAndIsr request in 564ms correlationId 5 from controller 0 for 16 partitions (state.change.logger)
[2023-04-04 10:05:30,310] INFO [Broker id=0] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 6 (state.change.logger)
[2023-04-04 10:05:30,324] INFO [Broker id=2] Finished LeaderAndIsr request in 583ms correlationId 3 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:05:30,329] INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4 (state.change.logger)
[2023-04-04 10:06:35,268] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=1, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2023-04-04 10:06:35,269] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,269] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,269] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,269] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 7 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,270] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,270] INFO [Broker id=0] Follower TestTopic-2 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 1. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:06:35,271] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 5 (state.change.logger)
[2023-04-04 10:06:35,271] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,271] INFO [Broker id=0] Stopped fetchers as part of become-follower request from controller 0 epoch 1 with correlation id 7 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,272] INFO [Broker id=1] Leader TestTopic-2 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:06:35,274] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:06:35,276] INFO [Controller id=0 epoch=1] Sending StopReplica request for 2 replicas to broker 0 (state.change.logger)
[2023-04-04 10:06:35,278] INFO [Broker id=0] Finished LeaderAndIsr request in 9ms correlationId 7 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,280] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 8 (state.change.logger)
[2023-04-04 10:06:35,285] INFO [Broker id=0] Handling StopReplica request correlationId 9 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:06:35,288] INFO [Broker id=0] Ignoring StopReplica request (delete=false) from controller 0 with correlation id 9 epoch 1 for partition TestTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,289] INFO [Broker id=0] Ignoring StopReplica request (delete=false) from controller 0 with correlation id 9 epoch 1 for partition TestTopic-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,303] INFO [Broker id=1] Finished LeaderAndIsr request in 33ms correlationId 6 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,306] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 7 (state.change.logger)
[2023-04-04 10:06:35,315] INFO [Controller id=0 epoch=1] Partition TestTopic-0 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:1) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,316] INFO [Controller id=0 epoch=1] Partition TestTopic-4 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:1) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,318] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,318] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,319] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 2 partitions (state.change.logger)
[2023-04-04 10:06:35,319] INFO [Controller id=0 epoch=1] Sending StopReplica request for 2 replicas to broker 0 (state.change.logger)
[2023-04-04 10:06:35,319] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,320] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 6 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,321] INFO [Broker id=0] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 10 (state.change.logger)
[2023-04-04 10:06:35,321] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 8 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,322] INFO [Broker id=1] Leader TestTopic-4 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:06:35,322] INFO [Broker id=0] Handling StopReplica request correlationId 11 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:06:35,322] INFO [Broker id=0] Ignoring StopReplica request (delete=false) from controller 0 with correlation id 11 epoch 1 for partition TestTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,322] INFO [Broker id=0] Ignoring StopReplica request (delete=false) from controller 0 with correlation id 11 epoch 1 for partition TestTopic-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,323] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,324] INFO [Broker id=2] Leader TestTopic-0 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:06:35,334] INFO [Broker id=1] Finished LeaderAndIsr request in 15ms correlationId 8 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,337] INFO [Broker id=1] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 9 (state.change.logger)
[2023-04-04 10:06:35,339] INFO [Broker id=2] Finished LeaderAndIsr request in 18ms correlationId 6 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,340] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 7 (state.change.logger)
[2023-04-04 10:06:35,666] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-04-04 10:06:35,730] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 20 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,733] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 19 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,733] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 39 partitions (state.change.logger)
[2023-04-04 10:06:35,736] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 21 partitions (state.change.logger)
[2023-04-04 10:06:35,736] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 20 partitions (state.change.logger)
[2023-04-04 10:06:35,737] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,737] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-13 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-43 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-28 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,738] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,739] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,739] INFO [Broker id=1] Finished LeaderAndIsr request in 4ms correlationId 1 from controller 1 for 21 partitions (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,741] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,742] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,742] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,742] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,742] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,742] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,743] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,743] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,743] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,743] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,743] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,744] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,744] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,744] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,744] INFO [Broker id=1] Add 39 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 10:06:35,745] INFO [Broker id=2] Finished LeaderAndIsr request in 9ms correlationId 1 from controller 1 for 20 partitions (state.change.logger)
[2023-04-04 10:06:35,748] INFO [Broker id=2] Add 39 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 10:06:35,797] INFO [Controller id=1 epoch=2] Partition TestTopic-4 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,798] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,798] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,798] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,799] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,799] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,799] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,799] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,799] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,799] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,800] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,800] INFO [Controller id=1 epoch=2] Partition TestTopic-0 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,800] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,801] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,801] INFO [Controller id=1 epoch=2] Partition TestTopic-2 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,801] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,801] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,801] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,801] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:06:35,803] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,804] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:06:35,804] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-04-04 10:06:35,804] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:06:35,805] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition TestTopic-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,805] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition TestTopic-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,805] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,805] INFO [Broker id=1] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:06:35,805] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition TestTopic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:06:35,805] INFO [Broker id=2] Finished LeaderAndIsr request in 0ms correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:06:35,807] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-04-04 10:06:35,808] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-04-04 10:06:35,836] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,836] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,837] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,837] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,837] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,838] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,838] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,838] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,840] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,840] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,840] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,841] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,841] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,841] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,841] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,841] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:06:35,842] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:17,479] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition TestTopic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:17,480] INFO [Controller id=1 epoch=2] Changed partition TestTopic-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=1, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2023-04-04 10:07:17,480] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:07:17,480] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:07:17,480] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,481] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,481] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,481] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:17,481] INFO [Broker id=2] Follower TestTopic-3 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 1. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:07:17,481] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,482] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 5 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,482] INFO [Broker id=1] Leader TestTopic-3 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:07:17,483] INFO [Controller id=1 epoch=2] Sending StopReplica request for 1 replicas to broker 2 (state.change.logger)
[2023-04-04 10:07:17,486] INFO [Broker id=2] Finished LeaderAndIsr request in 5ms correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,489] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-04-04 10:07:17,493] INFO [Broker id=2] Handling StopReplica request correlationId 7 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,493] INFO [Controller id=1 epoch=2] Partition TestTopic-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:17,494] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:07:17,494] INFO [Broker id=1] Finished LeaderAndIsr request in 14ms correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,494] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,494] INFO [Controller id=1 epoch=2] Sending StopReplica request for 1 replicas to broker 2 (state.change.logger)
[2023-04-04 10:07:17,495] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-04-04 10:07:17,496] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,497] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 7 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,497] INFO [Broker id=1] Leader TestTopic-1 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 1 from offset 12 with partition epoch 1, high watermark 12, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-04-04 10:07:17,498] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 1 with correlation id 7 epoch 2 for partition TestTopic-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:17,502] INFO [Broker id=1] Finished LeaderAndIsr request in 6ms correlationId 7 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,504] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-04-04 10:07:17,507] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-04-04 10:07:17,509] INFO [Broker id=2] Handling StopReplica request correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:07:17,509] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 1 with correlation id 9 epoch 2 for partition TestTopic-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:22,509] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition TestTopic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:22,509] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:22,509] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:22,509] INFO [Controller id=1 epoch=2] Sending StopReplica request for 2 replicas to broker 2 (state.change.logger)
[2023-04-04 10:07:22,510] INFO [Broker id=2] Handling StopReplica request correlationId 10 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:22,510] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 1 with correlation id 10 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:22,512] INFO [Controller id=1 epoch=2] Partition TestTopic-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:22,512] INFO [Controller id=1 epoch=2] Partition TestTopic-3 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:22,512] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:07:22,512] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 2 partitions (state.change.logger)
[2023-04-04 10:07:22,513] INFO [Controller id=1 epoch=2] Sending StopReplica request for 2 replicas to broker 2 (state.change.logger)
[2023-04-04 10:07:22,513] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:22,513] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 9 epoch 2 for partition TestTopic-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:22,513] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 9 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:22,513] INFO [Broker id=1] Finished LeaderAndIsr request in 0ms correlationId 9 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:22,514] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 11 (state.change.logger)
[2023-04-04 10:07:22,515] INFO [Broker id=1] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2023-04-04 10:07:22,515] INFO [Broker id=2] Handling StopReplica request correlationId 12 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:22,515] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 1 with correlation id 12 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,520] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition TestTopic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,520] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:27,520] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:27,520] INFO [Controller id=1 epoch=2] Sending StopReplica request for 2 replicas to broker 2 (state.change.logger)
[2023-04-04 10:07:27,521] INFO [Broker id=2] Handling StopReplica request correlationId 13 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,521] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 1 with correlation id 13 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,523] INFO [Controller id=1 epoch=2] Partition TestTopic-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,523] INFO [Controller id=1 epoch=2] Partition TestTopic-3 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,523] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:07:27,524] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,524] INFO [Controller id=1 epoch=2] Sending StopReplica request for 2 replicas to broker 2 (state.change.logger)
[2023-04-04 10:07:27,524] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 11 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,524] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 11 epoch 2 for partition TestTopic-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,524] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 11 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,524] INFO [Broker id=1] Finished LeaderAndIsr request in 0ms correlationId 11 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,525] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 14 (state.change.logger)
[2023-04-04 10:07:27,525] INFO [Broker id=2] Handling StopReplica request correlationId 15 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,525] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 1 with correlation id 15 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,525] INFO [Broker id=1] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 12 (state.change.logger)
[2023-04-04 10:07:27,729] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:27,747] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,748] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,748] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,748] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,749] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,749] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,749] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,749] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,750] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,750] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,750] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,750] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,750] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,750] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,751] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,752] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,753] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,753] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,753] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,753] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,753] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,753] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:07:27,754] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:07:27,779] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,779] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,779] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition TestTopic-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,780] INFO [Controller id=1 epoch=2] Partition TestTopic-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,781] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,782] INFO [Controller id=1 epoch=2] Partition TestTopic-3 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:07:27,782] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:07:27,782] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 20 partitions (state.change.logger)
[2023-04-04 10:07:27,783] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 13 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,784] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 13 epoch 2 for partition TestTopic-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,784] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 13 epoch 2 for partition TestTopic-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2023-04-04 10:07:27,784] INFO [Broker id=1] Finished LeaderAndIsr request in 2ms correlationId 13 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:07:27,786] INFO [Broker id=1] Add 20 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 14 (state.change.logger)
[2023-04-04 10:08:22,927] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-04-04 10:08:22,929] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0) for 55 partitions (state.change.logger)
[2023-04-04 10:08:22,932] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 0 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-04-04 10:08:22,932] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1) for 19 partitions (state.change.logger)
[2023-04-04 10:08:22,933] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 16 (state.change.logger)
[2023-04-04 10:08:22,965] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,965] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,966] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,966] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,966] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,966] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,967] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,967] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,967] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,967] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,967] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,968] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,968] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,968] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,968] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,969] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,969] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,969] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 0 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:22,970] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1) for 16 partitions (state.change.logger)
[2023-04-04 10:08:22,971] INFO [Broker id=1] Add 16 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 17 (state.change.logger)
[2023-04-04 10:08:23,234] INFO [Broker id=0] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2023-04-04 10:08:23,260] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:08:23,295] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-35 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,305] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition TestTopic-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,306] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-5 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,306] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-20 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,309] INFO [Broker id=0] Follower TestTopic-2 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,309] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-41 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,309] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-29 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,310] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-44 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,310] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-14 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,311] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-2 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,311] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-23 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,312] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-38 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,312] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-8 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,312] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-11 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,312] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-26 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,312] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-47 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,313] INFO [Broker id=0] Follower TestTopic-4 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,313] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-17 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,314] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-32 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:23,316] INFO [Broker id=0] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 2 partitions (state.change.logger)
[2023-04-04 10:08:23,372] INFO [Broker id=0] Finished LeaderAndIsr request in 112ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:08:23,378] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 10:08:23,380] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 1 for 16 partitions (state.change.logger)
[2023-04-04 10:08:23,385] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-04 10:08:23,393] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,401] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,405] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,410] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,415] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,418] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,423] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,423] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1) for 1 partitions (state.change.logger)
[2023-04-04 10:08:23,425] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 18 (state.change.logger)
[2023-04-04 10:08:23,428] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,431] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,435] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,439] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1) for 1 partitions (state.change.logger)
[2023-04-04 10:08:23,439] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,440] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2023-04-04 10:08:23,443] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,446] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,449] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,453] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,456] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:23,472] INFO [Broker id=0] Finished LeaderAndIsr request in 92ms correlationId 3 from controller 1 for 16 partitions (state.change.logger)
[2023-04-04 10:08:23,476] INFO [Broker id=0] Add 16 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-04-04 10:08:23,478] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2023-04-04 10:08:23,480] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-04-04 10:08:44,086] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1) for 0 partitions (state.change.logger)
[2023-04-04 10:08:44,087] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(2) for 55 partitions (state.change.logger)
[2023-04-04 10:08:44,089] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 20 become-follower partitions (state.change.logger)
[2023-04-04 10:08:44,090] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 20 partitions (state.change.logger)
[2023-04-04 10:08:44,091] INFO [Broker id=1] Add 20 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 21 (state.change.logger)
[2023-04-04 10:08:44,092] INFO [Broker id=0] Add 20 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,113] INFO [Controller id=1 epoch=2] Changed partition TestTopic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 0 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 18 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:44,114] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 18 partitions (state.change.logger)
[2023-04-04 10:08:44,115] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:08:44,115] INFO [Broker id=0] Follower TestTopic-0 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,116] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 22 (state.change.logger)
[2023-04-04 10:08:44,116] INFO [Broker id=0] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 9 for 1 partitions (state.change.logger)
[2023-04-04 10:08:44,125] INFO [Broker id=0] Finished LeaderAndIsr request in 10ms correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-04-04 10:08:44,127] INFO [Broker id=0] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2023-04-04 10:08:44,401] INFO [Broker id=2] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2023-04-04 10:08:44,427] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 20 partitions (state.change.logger)
[2023-04-04 10:08:44,471] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-3 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,488] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-18 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,488] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition TestTopic-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,488] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-39 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,489] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-9 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,489] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-24 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,489] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-27 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,490] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-42 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,490] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-12 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,490] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-33 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,491] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-48 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,495] INFO [Broker id=2] Follower TestTopic-1 starts at leader epoch 1 from offset 12 with partition epoch 1 and high watermark 12. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,495] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-21 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,496] INFO [Broker id=2] Follower TestTopic-3 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,496] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-36 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,497] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-6 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,497] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-45 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,497] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-15 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,498] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-30 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,499] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:08:44,504] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 2 partitions (state.change.logger)
[2023-04-04 10:08:44,575] INFO [Broker id=2] Finished LeaderAndIsr request in 148ms correlationId 1 from controller 1 for 20 partitions (state.change.logger)
[2023-04-04 10:08:44,582] INFO [Broker id=2] Add 20 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 10:08:44,584] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 18 partitions (state.change.logger)
[2023-04-04 10:08:44,591] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 18 partitions (state.change.logger)
[2023-04-04 10:08:44,594] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:08:44,600] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2023-04-04 10:08:44,601] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 11 (state.change.logger)
[2023-04-04 10:08:44,603] INFO [Broker id=2] Leader __consumer_offsets-3 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,615] INFO [Broker id=2] Leader __consumer_offsets-18 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,625] INFO [Broker id=2] Leader TestTopic-0 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,631] INFO [Broker id=2] Leader __consumer_offsets-39 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,635] INFO [Broker id=2] Leader __consumer_offsets-9 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,639] INFO [Broker id=2] Leader __consumer_offsets-24 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,643] INFO [Broker id=2] Leader __consumer_offsets-27 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,647] INFO [Broker id=2] Leader __consumer_offsets-42 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,650] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:08:44,652] INFO [Broker id=2] Leader __consumer_offsets-12 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,652] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 24 (state.change.logger)
[2023-04-04 10:08:44,652] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 12 (state.change.logger)
[2023-04-04 10:08:44,655] INFO [Broker id=2] Leader __consumer_offsets-33 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,659] INFO [Broker id=2] Leader __consumer_offsets-48 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,662] INFO [Broker id=2] Leader __consumer_offsets-21 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,666] INFO [Broker id=2] Leader __consumer_offsets-36 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,670] INFO [Broker id=2] Leader __consumer_offsets-6 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,673] INFO [Broker id=2] Leader __consumer_offsets-45 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,676] INFO [Broker id=2] Leader __consumer_offsets-15 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,679] INFO [Broker id=2] Leader __consumer_offsets-30 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,683] INFO [Broker id=2] Leader __consumer_offsets-0 with topic id Some(d17Deoc6ShqW777k5Bxd5Q) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:08:44,698] INFO [Broker id=2] Finished LeaderAndIsr request in 114ms correlationId 3 from controller 1 for 18 partitions (state.change.logger)
[2023-04-04 10:08:44,701] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-04-04 10:08:44,703] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2023-04-04 10:08:44,706] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-04-04 10:08:45,490] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:08:45,491] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 25 (state.change.logger)
[2023-04-04 10:08:45,491] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 13 (state.change.logger)
[2023-04-04 10:08:45,492] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 7 (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Changed partition TestTopic-1 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Changed partition TestTopic-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Changed partition TestTopic-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Changed partition TestTopic-4 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=2, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 0 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 4 become-follower partitions (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 4 partitions (state.change.logger)
[2023-04-04 10:08:53,562] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 26 from controller 1 for 4 partitions (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=1] Follower TestTopic-1 starts at leader epoch 2 from offset 15 with partition epoch 3 and high watermark 15. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=1] Follower TestTopic-3 starts at leader epoch 2 from offset 0 with partition epoch 3 and high watermark 0. Current leader is 2. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 14 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=1] Follower TestTopic-2 starts at leader epoch 2 from offset 0 with partition epoch 3 and high watermark 0. Current leader is 0. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=1] Follower TestTopic-4 starts at leader epoch 2 from offset 0 with partition epoch 3 and high watermark 0. Current leader is 0. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 8 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:08:53,563] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 26 for 4 partitions (state.change.logger)
[2023-04-04 10:08:53,566] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 8 from controller 1 epoch 2 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 10:08:53,566] INFO [Broker id=2] Leader TestTopic-1 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 2 from offset 15 with partition epoch 3, high watermark 15, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,568] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 14 from controller 1 epoch 2 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 10:08:53,570] INFO [Broker id=1] Finished LeaderAndIsr request in 8ms correlationId 26 from controller 1 for 4 partitions (state.change.logger)
[2023-04-04 10:08:53,574] INFO [Broker id=1] Add 4 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 27 (state.change.logger)
[2023-04-04 10:08:53,575] INFO [Broker id=2] Leader TestTopic-3 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 2 from offset 0 with partition epoch 3, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,578] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 2 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,596] INFO [Broker id=0] Leader TestTopic-4 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 2 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-04-04 10:08:53,606] INFO [Broker id=2] Finished LeaderAndIsr request in 43ms correlationId 8 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:08:53,609] INFO [Broker id=2] Add 4 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 9 (state.change.logger)
[2023-04-04 10:08:53,613] INFO [Broker id=0] Finished LeaderAndIsr request in 50ms correlationId 14 from controller 1 for 2 partitions (state.change.logger)
[2023-04-04 10:08:53,616] INFO [Broker id=0] Add 4 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 15 (state.change.logger)
[2023-04-04 10:08:53,907] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 0 partitions (state.change.logger)
[2023-04-04 10:08:53,962] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 18 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:08:53,965] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 2 with 20 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:53,965] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 38 partitions (state.change.logger)
[2023-04-04 10:08:53,967] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 0 for 20 partitions (state.change.logger)
[2023-04-04 10:08:53,968] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 10:08:53,969] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition TestTopic-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,969] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition TestTopic-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,969] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition TestTopic-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,969] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,969] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition TestTopic-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,969] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition TestTopic-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition TestTopic-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,970] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,971] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,972] INFO [Broker id=2] Finished LeaderAndIsr request in 5ms correlationId 1 from controller 0 for 20 partitions (state.change.logger)
[2023-04-04 10:08:53,973] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:53,974] INFO [Broker id=0] Finished LeaderAndIsr request in 7ms correlationId 1 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 10:08:53,978] INFO [Broker id=2] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 2 (state.change.logger)
[2023-04-04 10:08:53,978] INFO [Broker id=0] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 2 (state.change.logger)
[2023-04-04 10:08:54,016] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,017] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,017] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,018] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,018] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,018] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,018] INFO [Controller id=0 epoch=3] Partition TestTopic-3 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,019] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,019] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,019] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,019] INFO [Controller id=0 epoch=3] Partition TestTopic-4 state changed to (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,019] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,020] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,020] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,020] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,020] INFO [Controller id=0 epoch=3] Partition TestTopic-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,020] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,020] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,021] INFO [Controller id=0 epoch=3] Partition TestTopic-2 state changed to (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,021] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,021] INFO [Controller id=0 epoch=3] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:08:54,022] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:54,023] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 2 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:08:54,023] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 21 partitions (state.change.logger)
[2023-04-04 10:08:54,024] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:08:54,024] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 3 epoch 3 for partition TestTopic-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:54,024] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 3 epoch 3 for partition TestTopic-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:54,024] INFO [Broker id=0] Finished LeaderAndIsr request in 0ms correlationId 3 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:08:54,024] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:08:54,025] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 3 epoch 3 for partition TestTopic-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:54,025] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 0 with correlation id 3 epoch 3 for partition TestTopic-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:08:54,027] INFO [Broker id=0] Add 21 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2023-04-04 10:08:54,027] INFO [Broker id=2] Finished LeaderAndIsr request in 3ms correlationId 3 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:08:54,029] INFO [Broker id=2] Add 21 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2023-04-04 10:08:54,061] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,063] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,065] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,065] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,065] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,066] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,066] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,066] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,067] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,067] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,067] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,067] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,067] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,068] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,068] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,068] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,068] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:08:54,069] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:10:13,280] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:13,281] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:13,282] INFO [Controller id=0 epoch=3] Changed partition TestTopic-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=4, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=5) (state.change.logger)
[2023-04-04 10:10:13,282] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:10:13,282] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-04-04 10:10:13,283] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,283] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 5 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,283] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,283] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:10:13,284] INFO [Broker id=2] Follower TestTopic-0 starts at leader epoch 4 from offset 0 with partition epoch 5 and high watermark 0. Current leader is 0. Previous leader epoch was 3. (state.change.logger)
[2023-04-04 10:10:13,284] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 0 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,284] INFO [Broker id=0] Leader TestTopic-0 with topic id Some(f6ebRPBcQ_-klN46O2eDcA) starts at leader epoch 4 from offset 0 with partition epoch 5, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was 3. (state.change.logger)
[2023-04-04 10:10:13,284] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 3 with correlation id 5 for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,287] INFO [Broker id=2] Finished LeaderAndIsr request in 4ms correlationId 5 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,290] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 6 (state.change.logger)
[2023-04-04 10:10:13,292] INFO [Broker id=0] Finished LeaderAndIsr request in 9ms correlationId 5 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:13,294] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 6 (state.change.logger)
[2023-04-04 10:10:17,002] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:17,003] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:17,004] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:17,004] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:10:17,004] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:10:18,307] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:18,308] ERROR [Controller id=0 epoch=3] Controller 0 epoch 3 failed to change state for partition TestTopic-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1351)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1313)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1313)
	at kafka.controller.KafkaController.process(KafkaController.scala:2562)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:10:18,309] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:10:18,309] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:10:18,310] INFO [Controller id=0 epoch=3] Sending StopReplica request for 1 replicas to broker 2 (state.change.logger)
[2023-04-04 10:10:18,313] INFO [Controller id=0 epoch=3] Partition TestTopic-0 state changed to (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:5,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:10:18,313] INFO [Controller id=0 epoch=3] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:10:18,313] INFO [Broker id=2] Handling StopReplica request correlationId 7 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:18,313] INFO [Controller id=0 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 1 partitions (state.change.logger)
[2023-04-04 10:10:18,313] INFO [Controller id=0 epoch=3] Sending StopReplica request for 1 replicas to broker 2 (state.change.logger)
[2023-04-04 10:10:18,314] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 7 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:18,314] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 7 epoch 3 for partition TestTopic-0 since its associated leader epoch 4 matches the current leader epoch (state.change.logger)
[2023-04-04 10:10:18,314] INFO [Broker id=0] Finished LeaderAndIsr request in 0ms correlationId 7 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:18,316] INFO [Broker id=0] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 8 (state.change.logger)
[2023-04-04 10:10:18,316] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 0 with correlation id 7 epoch 3 for partition TestTopic-0 since its associated leader epoch 4 matches the current leader epoch (state.change.logger)
[2023-04-04 10:10:18,323] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 8 (state.change.logger)
[2023-04-04 10:10:18,324] INFO [Broker id=2] Handling StopReplica request correlationId 9 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:10:18,324] INFO [Broker id=2] Ignoring StopReplica request (delete=false) from controller 0 with correlation id 9 epoch 3 for partition TestTopic-0 since its associated leader epoch 4 matches the current leader epoch (state.change.logger)
[2023-04-04 10:37:39,546] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:37:50,297] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:37:50,298] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-04-04 10:38:07,722] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1) for 0 partitions (state.change.logger)
[2023-04-04 10:38:07,723] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-04-04 10:39:16,969] INFO [Controller id=0 epoch=1] Changed partition TestTopic-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:16,970] INFO [Controller id=0 epoch=1] Changed partition TestTopic-0 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:16,970] INFO [Controller id=0 epoch=1] Changed partition TestTopic-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:16,970] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:16,970] INFO [Controller id=0 epoch=1] Changed partition TestTopic-3 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:16,970] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:39:16,973] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:39:16,997] INFO [Controller id=0 epoch=1] Changed partition TestTopic-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:16,998] INFO [Controller id=0 epoch=1] Changed partition TestTopic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:16,998] INFO [Controller id=0 epoch=1] Changed partition TestTopic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:16,998] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:16,998] INFO [Controller id=0 epoch=1] Changed partition TestTopic-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:16,999] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:39:17,001] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:39:17,001] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:39:17,001] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 5 partitions (state.change.logger)
[2023-04-04 10:39:17,003] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:39:17,005] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:39:17,006] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:39:17,007] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:39:17,025] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 10:39:17,026] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 0 epoch 1 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 10:39:17,029] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 1 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 10:39:17,115] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:17,117] INFO [Broker id=2] Leader TestTopic-0 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:17,121] INFO [Broker id=1] Leader TestTopic-1 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:17,131] INFO [Broker id=0] Finished LeaderAndIsr request in 127ms correlationId 3 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 10:39:17,139] INFO [Broker id=2] Leader TestTopic-3 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:17,140] INFO [Broker id=1] Leader TestTopic-4 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:17,141] INFO [Broker id=0] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4 (state.change.logger)
[2023-04-04 10:39:17,156] INFO [Broker id=1] Finished LeaderAndIsr request in 152ms correlationId 2 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:39:17,158] INFO [Broker id=2] Finished LeaderAndIsr request in 153ms correlationId 1 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 10:39:17,170] INFO [Broker id=1] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 3 (state.change.logger)
[2023-04-04 10:39:17,171] INFO [Broker id=2] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,571] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 10:39:41,572] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:39:41,573] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,631] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,632] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 10:39:41,633] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:39:41,633] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:39:41,633] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:39:41,633] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 50 partitions (state.change.logger)
[2023-04-04 10:39:41,634] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:39:41,634] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 5 from controller 0 for 16 partitions (state.change.logger)
[2023-04-04 10:39:41,635] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:39:41,635] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:39:41,654] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 0 epoch 1 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-04 10:39:41,654] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:39:41,655] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 4 from controller 0 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:39:41,701] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,716] INFO [Broker id=2] Leader __consumer_offsets-3 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,732] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,746] INFO [Broker id=2] Leader __consumer_offsets-18 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,747] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,766] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,769] INFO [Broker id=2] Leader __consumer_offsets-39 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,771] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,792] INFO [Broker id=2] Leader __consumer_offsets-9 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,792] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,794] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,815] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,816] INFO [Broker id=2] Leader __consumer_offsets-24 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,818] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,842] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,848] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,860] INFO [Broker id=2] Leader __consumer_offsets-27 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,868] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,872] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,876] INFO [Broker id=2] Leader __consumer_offsets-42 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,886] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,891] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,899] INFO [Broker id=2] Leader __consumer_offsets-12 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,911] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,912] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,918] INFO [Broker id=2] Leader __consumer_offsets-33 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,931] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,932] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,946] INFO [Broker id=2] Leader __consumer_offsets-48 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,957] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,958] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,966] INFO [Broker id=2] Leader __consumer_offsets-21 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,975] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,976] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,983] INFO [Broker id=2] Leader __consumer_offsets-36 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,991] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,993] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:41,999] INFO [Broker id=2] Leader __consumer_offsets-6 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,009] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,010] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,016] INFO [Broker id=2] Leader __consumer_offsets-45 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,025] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,025] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,032] INFO [Broker id=2] Leader __consumer_offsets-15 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,042] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,042] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,050] INFO [Broker id=2] Leader __consumer_offsets-30 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,064] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,073] INFO [Broker id=2] Leader __consumer_offsets-0 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,075] INFO [Broker id=0] Finished LeaderAndIsr request in 441ms correlationId 5 from controller 0 for 16 partitions (state.change.logger)
[2023-04-04 10:39:42,077] INFO [Broker id=0] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 6 (state.change.logger)
[2023-04-04 10:39:42,085] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:39:42,091] INFO [Broker id=2] Finished LeaderAndIsr request in 457ms correlationId 3 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:39:42,095] INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4 (state.change.logger)
[2023-04-04 10:39:42,100] INFO [Broker id=1] Finished LeaderAndIsr request in 465ms correlationId 4 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:39:42,105] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 5 (state.change.logger)
[2023-04-04 10:41:13,431] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:41:13,675] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-04-04 10:41:13,699] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:41:13,701] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:41:13,701] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 38 partitions (state.change.logger)
[2023-04-04 10:41:13,702] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:41:13,703] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:41:13,703] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,703] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,703] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,703] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-13 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-43 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-28 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,704] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=1] Finished LeaderAndIsr request in 3ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition TestTopic-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,705] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,706] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,706] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,706] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,706] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 2 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:13,708] INFO [Broker id=2] Finished LeaderAndIsr request in 5ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:41:13,708] INFO [Broker id=1] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 10:41:13,711] INFO [Broker id=2] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 10:41:13,756] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,757] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,759] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,759] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,759] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,759] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,759] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition TestTopic-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,760] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,761] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:13,762] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 17 partitions (state.change.logger)
[2023-04-04 10:41:13,765] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 3 (state.change.logger)
[2023-04-04 10:41:13,767] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 3 (state.change.logger)
[2023-04-04 10:41:13,793] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,794] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,794] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,795] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,795] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,796] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,796] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,796] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,796] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,797] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,797] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,797] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,798] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition TestTopic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,798] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,798] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,799] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,799] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:13,800] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:41:46,685] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:41:47,042] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-04-04 10:41:47,062] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:41:47,063] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 19 partitions (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 19 partitions (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition TestTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition TestTopic-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 10:41:47,065] INFO [Broker id=2] Finished LeaderAndIsr request in 0ms correlationId 1 from controller 2 for 19 partitions (state.change.logger)
[2023-04-04 10:41:47,067] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2023-04-04 10:41:47,090] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,091] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition TestTopic-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,092] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,111] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,111] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,111] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,111] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition TestTopic-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition TestTopic-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,112] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,113] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,113] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:41:47,113] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 36 partitions (state.change.logger)
[2023-04-04 10:41:47,114] INFO [Broker id=2] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 3 (state.change.logger)
[2023-04-04 10:41:47,142] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,143] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,143] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,143] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,143] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,143] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,144] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,145] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,146] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,146] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,146] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,146] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition TestTopic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,148] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,149] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,149] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,149] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:41:47,151] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:43:13,082] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-04-04 10:43:13,084] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(0) for 55 partitions (state.change.logger)
[2023-04-04 10:43:13,088] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 0 with 0 become-leader and 17 become-follower partitions (state.change.logger)
[2023-04-04 10:43:13,088] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,089] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 5 (state.change.logger)
[2023-04-04 10:43:13,112] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,112] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,112] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,112] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,113] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,113] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,113] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,113] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,114] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,115] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,115] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,115] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,115] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition TestTopic-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=3, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-04-04 10:43:13,116] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:43:13,117] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,117] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 6 (state.change.logger)
[2023-04-04 10:43:13,330] INFO [Broker id=0] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 0 (state.change.logger)
[2023-04-04 10:43:13,348] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 2 for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,371] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-35 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,380] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-5 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,380] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-20 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,380] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition TestTopic-2 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,381] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-41 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,381] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-29 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,381] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-44 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,381] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-14 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,382] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-2 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,382] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-23 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,382] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-38 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,383] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-8 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,383] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-11 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,384] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-26 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,384] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-47 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,384] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-17 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,384] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-32 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:43:13,386] INFO [Broker id=0] Stopped fetchers as part of become-follower request from controller 2 epoch 3 with correlation id 1 for 0 partitions (state.change.logger)
[2023-04-04 10:43:13,394] INFO [Broker id=0] Finished LeaderAndIsr request in 46ms correlationId 1 from controller 2 for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,401] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2023-04-04 10:43:13,402] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 2 for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,406] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 2 epoch 3 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,410] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,418] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,422] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,425] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,428] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,431] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,435] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,438] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,441] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,443] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,446] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,449] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,454] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,457] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,459] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,462] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,465] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 3 from offset 0 with partition epoch 3, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:43:13,479] INFO [Broker id=0] Finished LeaderAndIsr request in 77ms correlationId 3 from controller 2 for 17 partitions (state.change.logger)
[2023-04-04 10:43:13,481] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 4 (state.change.logger)
[2023-04-04 10:44:26,045] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 2) for 0 partitions (state.change.logger)
[2023-04-04 10:44:26,047] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 55 partitions (state.change.logger)
[2023-04-04 10:44:26,049] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-04-04 10:44:26,049] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,050] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 8 (state.change.logger)
[2023-04-04 10:44:26,050] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 6 (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition TestTopic-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition TestTopic-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-04-04 10:44:26,069] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 1 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:44:26,070] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,071] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 9 (state.change.logger)
[2023-04-04 10:44:26,071] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 7 (state.change.logger)
[2023-04-04 10:44:26,294] INFO [Broker id=1] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 0 (state.change.logger)
[2023-04-04 10:44:26,314] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,366] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-37 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,379] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-7 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,380] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-22 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,380] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-10 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,381] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-31 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,381] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-46 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,381] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-1 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,382] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-16 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,382] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-19 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,382] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition TestTopic-1 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,382] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-34 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,382] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-4 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,383] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-25 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,383] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-40 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,383] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-43 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,384] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-13 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,384] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-28 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,384] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition TestTopic-4 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,384] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 3 for partition __consumer_offsets-49 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:44:26,388] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 2 epoch 3 with correlation id 1 for 0 partitions (state.change.logger)
[2023-04-04 10:44:26,402] INFO [Broker id=1] Finished LeaderAndIsr request in 87ms correlationId 1 from controller 2 for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,407] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2023-04-04 10:44:26,409] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,415] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 2 epoch 3 as part of the become-leader transition for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,420] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,426] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,431] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,435] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,438] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,442] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,446] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,450] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,453] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,456] INFO [Broker id=1] Leader TestTopic-1 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,459] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,464] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 1 with partition epoch 2, high watermark 1, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,468] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,470] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,473] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,476] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,479] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,482] INFO [Broker id=1] Leader TestTopic-4 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 2 from offset 8 with partition epoch 2, high watermark 8, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,485] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:44:26,497] INFO [Broker id=1] Finished LeaderAndIsr request in 88ms correlationId 3 from controller 2 for 19 partitions (state.change.logger)
[2023-04-04 10:44:26,500] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 4 (state.change.logger)
[2023-04-04 10:45:28,157] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:45:28,178] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,183] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,183] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,184] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,184] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,185] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,185] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,185] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,186] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,186] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,186] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,187] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,187] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition TestTopic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,188] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,188] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,188] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,189] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:28,189] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:45:28,222] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,222] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,222] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,223] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Partition TestTopic-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:28,224] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 17 partitions (state.change.logger)
[2023-04-04 10:45:28,227] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 10 (state.change.logger)
[2023-04-04 10:45:28,228] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 5 (state.change.logger)
[2023-04-04 10:45:49,290] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-04-04 10:45:49,314] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 1 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:45:49,315] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1) for 19 partitions (state.change.logger)
[2023-04-04 10:45:49,316] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition TestTopic-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition TestTopic-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-16 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-13 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-46 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-43 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-10 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-22 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-19 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-49 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-31 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-28 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-25 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-7 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-40 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-37 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,317] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,318] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-34 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2023-04-04 10:45:49,318] INFO [Broker id=1] Finished LeaderAndIsr request in 2ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-04-04 10:45:49,320] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-04-04 10:45:49,346] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,347] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,348] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,348] INFO [Controller id=1 epoch=4] Partition TestTopic-2 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,348] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,348] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,348] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,348] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,364] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,364] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition TestTopic-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,365] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,366] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,366] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,366] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,366] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,366] INFO [Controller id=1 epoch=4] Partition TestTopic-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:45:49,366] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1) for 36 partitions (state.change.logger)
[2023-04-04 10:45:49,369] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2023-04-04 10:45:49,411] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,414] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,416] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,418] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,418] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,419] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,419] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,419] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,420] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,420] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,420] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,420] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,420] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,421] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,421] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,421] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,422] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,422] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,422] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,425] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition TestTopic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:45:49,429] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:47:29,025] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-04-04 10:47:29,027] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(0) for 55 partitions (state.change.logger)
[2023-04-04 10:47:29,031] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 0 with 0 become-leader and 17 become-follower partitions (state.change.logger)
[2023-04-04 10:47:29,032] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(0, 1) for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,033] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 5 (state.change.logger)
[2023-04-04 10:47:29,058] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,058] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,060] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,060] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,060] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,060] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,061] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,061] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,061] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,062] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,066] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition TestTopic-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=6, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 10:47:29,067] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:47:29,068] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(0, 1) for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,069] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-04-04 10:47:29,274] INFO [Broker id=0] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-04-04 10:47:29,291] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 1 for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,317] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-35 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,322] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-5 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,323] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-20 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,323] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition TestTopic-2 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,323] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-41 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,324] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-29 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,324] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-44 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,324] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-14 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,324] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-2 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,325] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-23 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,325] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-38 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,325] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-8 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,325] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-11 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,325] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-26 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,326] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-47 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,326] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-17 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,326] ERROR [Broker id=0] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-32 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 10:47:29,329] INFO [Broker id=0] Stopped fetchers as part of become-follower request from controller 1 epoch 4 with correlation id 1 for 0 partitions (state.change.logger)
[2023-04-04 10:47:29,341] INFO [Broker id=0] Finished LeaderAndIsr request in 49ms correlationId 1 from controller 1 for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,346] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-04-04 10:47:29,348] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,352] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 4 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,357] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,366] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,370] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,374] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,377] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,380] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,384] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,387] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,392] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,395] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,397] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,401] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,404] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,407] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,410] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,413] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,416] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:47:29,429] INFO [Broker id=0] Finished LeaderAndIsr request in 81ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-04-04 10:47:29,430] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-04-04 10:48:07,273] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:48:07,303] INFO [Controller id=0 epoch=5] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:48:07,306] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet(0) for 17 partitions (state.change.logger)
[2023-04-04 10:48:07,308] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition TestTopic-2 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-47 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-14 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-11 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-44 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-41 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-23 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-20 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-17 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-32 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-29 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-26 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-8 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-5 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,309] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-38 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,310] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-35 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,310] INFO [Broker id=0] Ignoring LeaderAndIsr request from controller 0 with correlation id 1 epoch 5 for partition __consumer_offsets-2 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-04-04 10:48:07,310] INFO [Broker id=0] Finished LeaderAndIsr request in 2ms correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:48:07,313] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 2 (state.change.logger)
[2023-04-04 10:48:07,346] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,347] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition TestTopic-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition TestTopic-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,348] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,361] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,362] INFO [Controller id=0 epoch=5] Partition TestTopic-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Partition TestTopic-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:07,363] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet(0) for 38 partitions (state.change.logger)
[2023-04-04 10:48:07,365] INFO [Broker id=0] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 3 (state.change.logger)
[2023-04-04 10:48:07,394] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,396] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,396] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,397] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,397] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,397] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,398] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,398] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,398] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,398] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,398] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,398] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,399] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,399] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,399] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,399] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,399] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,399] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,400] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,400] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,401] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,401] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,401] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,401] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,401] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,402] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,402] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,402] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,402] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,402] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,403] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,403] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,403] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,403] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,403] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,404] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,404] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,404] ERROR [Controller id=0 epoch=5] Controller 0 epoch 5 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:07,405] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:48:30,715] INFO [Controller id=0 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:48:37,208] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 10:48:37,248] INFO [Controller id=0 epoch=6] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 10:48:37,252] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet(0) for 17 partitions (state.change.logger)
[2023-04-04 10:48:37,304] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,305] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,305] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,306] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,306] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,306] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,306] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,306] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,306] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition TestTopic-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition TestTopic-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,307] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,308] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,308] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,326] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:48:37,347] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,347] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,348] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition TestTopic-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,349] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,350] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,350] INFO [Controller id=0 epoch=6] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,350] INFO [Controller id=0 epoch=6] Partition TestTopic-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 10:48:37,350] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet(0) for 38 partitions (state.change.logger)
[2023-04-04 10:48:37,380] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 6 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 10:48:37,393] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,396] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,398] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,398] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,399] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,399] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,399] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,400] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,400] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,400] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,401] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,401] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,401] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,401] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,401] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,402] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,402] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,402] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,403] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,403] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,403] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,403] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,404] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,404] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,405] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,406] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,407] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,407] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,408] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,408] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,408] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,408] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,408] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,409] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,409] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,409] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,410] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,410] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,410] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,410] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,411] ERROR [Controller id=0 epoch=6] Controller 0 epoch 6 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 10:48:37,411] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,412] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 10:48:37,415] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,418] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,422] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,427] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,431] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,434] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,438] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,442] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,446] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,449] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,452] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,458] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,463] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 10:48:37,487] INFO [Broker id=0] Finished LeaderAndIsr request in 160ms correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 10:48:37,499] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 2 (state.change.logger)
[2023-04-04 10:48:37,502] INFO [Broker id=0] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 3 (state.change.logger)
[2023-04-04 11:05:16,162] INFO [Controller id=0 epoch=6] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:08:24,756] INFO [Controller id=0 epoch=7] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 11:08:24,794] INFO [Controller id=0 epoch=7] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:08:24,796] INFO [Controller id=0 epoch=7] Sending UpdateMetadata request to brokers HashSet(0) for 17 partitions (state.change.logger)
[2023-04-04 11:08:24,856] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,856] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,857] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,857] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,857] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,857] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,857] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,857] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,858] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,858] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,859] INFO [Controller id=0 epoch=7] Partition TestTopic-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,859] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,859] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,859] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,860] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,860] INFO [Controller id=0 epoch=7] Partition TestTopic-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,860] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,860] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,860] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:7) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,891] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,892] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,892] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,893] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition TestTopic-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,894] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,895] INFO [Controller id=0 epoch=7] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,895] INFO [Controller id=0 epoch=7] Partition TestTopic-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:08:24,895] INFO [Controller id=0 epoch=7] Sending UpdateMetadata request to brokers HashSet(0) for 38 partitions (state.change.logger)
[2023-04-04 11:08:24,897] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:08:24,940] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 7 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 11:08:24,952] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,954] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,954] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,955] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,955] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,956] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,956] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,956] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,957] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,957] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,957] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,958] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,958] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,958] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,959] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,959] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,959] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,960] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,961] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,961] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,962] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,964] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,965] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,965] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,965] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,965] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,966] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,966] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,967] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,967] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,967] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,967] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,967] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,968] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,968] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,968] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,968] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,968] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,969] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,969] ERROR [Controller id=0 epoch=7] Controller 0 epoch 7 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:08:24,970] INFO [Controller id=0 epoch=7] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:08:24,971] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,975] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,981] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,985] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,990] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:24,997] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,000] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,005] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,010] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,014] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,017] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,020] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,023] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,029] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,032] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:08:25,051] INFO [Broker id=0] Finished LeaderAndIsr request in 157ms correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:08:25,061] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 7 with correlation id 2 (state.change.logger)
[2023-04-04 11:08:25,063] INFO [Broker id=0] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 7 with correlation id 3 (state.change.logger)
[2023-04-04 11:09:43,497] INFO [Controller id=0 epoch=7] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:09:58,470] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 11:09:58,505] INFO [Controller id=0 epoch=8] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:09:58,507] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0) for 17 partitions (state.change.logger)
[2023-04-04 11:09:58,562] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,562] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,562] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,562] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition TestTopic-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,563] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,564] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,564] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,564] INFO [Controller id=0 epoch=8] Partition TestTopic-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,564] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,564] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,564] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,590] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,590] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,590] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,591] INFO [Controller id=0 epoch=8] Partition TestTopic-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Controller id=0 epoch=8] Partition TestTopic-3 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:09:58,592] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:09:58,593] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0) for 38 partitions (state.change.logger)
[2023-04-04 11:09:58,632] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 8 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 11:09:58,635] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,637] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,637] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,638] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,639] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,640] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,640] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,641] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,641] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,641] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,642] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,642] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,642] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,643] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,643] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,643] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,643] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,644] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,644] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,644] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,646] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,646] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,646] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,646] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,647] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,647] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,647] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,647] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,647] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,647] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,648] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,648] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,648] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,648] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,648] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,648] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,649] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,649] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:09:58,649] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:09:58,712] INFO [Broker id=0] Leader __consumer_offsets-35 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,728] INFO [Broker id=0] Leader __consumer_offsets-5 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,740] INFO [Broker id=0] Leader __consumer_offsets-20 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,753] INFO [Broker id=0] Leader TestTopic-2 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,767] INFO [Broker id=0] Leader __consumer_offsets-41 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,780] INFO [Broker id=0] Leader __consumer_offsets-29 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,791] INFO [Broker id=0] Leader __consumer_offsets-44 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,805] INFO [Broker id=0] Leader __consumer_offsets-14 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,818] INFO [Broker id=0] Leader __consumer_offsets-2 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,830] INFO [Broker id=0] Leader __consumer_offsets-23 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,840] INFO [Broker id=0] Leader __consumer_offsets-38 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,852] INFO [Broker id=0] Leader __consumer_offsets-8 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,865] INFO [Broker id=0] Leader __consumer_offsets-11 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,876] INFO [Broker id=0] Leader __consumer_offsets-26 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,889] INFO [Broker id=0] Leader __consumer_offsets-47 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,901] INFO [Broker id=0] Leader __consumer_offsets-17 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,914] INFO [Broker id=0] Leader __consumer_offsets-32 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:09:58,934] INFO [Broker id=0] Finished LeaderAndIsr request in 344ms correlationId 1 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:09:58,943] INFO [Broker id=0] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 2 (state.change.logger)
[2023-04-04 11:09:58,947] INFO [Broker id=0] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 3 (state.change.logger)
[2023-04-04 11:10:34,640] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 11:10:34,643] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(1) for 55 partitions (state.change.logger)
[2023-04-04 11:10:34,648] INFO [Controller id=0 epoch=8] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-04-04 11:10:34,648] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0, 1) for 19 partitions (state.change.logger)
[2023-04-04 11:10:34,650] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 5 (state.change.logger)
[2023-04-04 11:10:34,676] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,677] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,677] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,678] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,678] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,678] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,678] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,679] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,679] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,679] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,679] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,679] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,680] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,680] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,680] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,680] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,681] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,681] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,681] ERROR [Controller id=0 epoch=8] Controller 0 epoch 8 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition TestTopic-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,682] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition TestTopic-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Sending LeaderAndIsr request to broker 1 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:10:34,683] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0, 1) for 19 partitions (state.change.logger)
[2023-04-04 11:10:34,685] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 6 (state.change.logger)
[2023-04-04 11:10:34,888] INFO [Broker id=1] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 0 (state.change.logger)
[2023-04-04 11:10:34,914] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:34,949] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-37 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,024] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-7 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,031] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-22 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,041] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-10 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,049] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-31 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,061] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-46 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,072] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,085] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-16 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,096] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-19 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,105] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition TestTopic-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,116] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-34 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,124] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-4 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,135] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-25 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,147] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-40 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,155] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-43 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,171] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-13 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,182] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-28 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,192] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition TestTopic-4 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,202] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-49 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:35,215] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 0 epoch 8 with correlation id 1 for 0 partitions (state.change.logger)
[2023-04-04 11:10:35,226] INFO [Broker id=1] Finished LeaderAndIsr request in 310ms correlationId 1 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:35,232] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 2 (state.change.logger)
[2023-04-04 11:10:35,233] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:35,236] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 8 as part of the become-leader transition for 19 partitions (state.change.logger)
[2023-04-04 11:10:35,242] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,252] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,257] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,262] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,265] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,268] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,272] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,275] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,278] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,281] INFO [Broker id=1] Leader TestTopic-1 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,284] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,287] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,290] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,293] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,296] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,299] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,303] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,307] INFO [Broker id=1] Leader TestTopic-4 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,310] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:35,323] INFO [Broker id=1] Finished LeaderAndIsr request in 90ms correlationId 3 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:35,325] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 4 (state.change.logger)
[2023-04-04 11:10:51,427] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0, 1) for 0 partitions (state.change.logger)
[2023-04-04 11:10:51,428] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 55 partitions (state.change.logger)
[2023-04-04 11:10:51,431] INFO [Controller id=0 epoch=8] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-04-04 11:10:51,431] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 19 partitions (state.change.logger)
[2023-04-04 11:10:51,433] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 6 (state.change.logger)
[2023-04-04 11:10:51,434] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 8 (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition TestTopic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Changed partition TestTopic-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-04-04 11:10:51,450] INFO [Controller id=0 epoch=8] Sending LeaderAndIsr request to broker 2 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:10:51,451] INFO [Controller id=0 epoch=8] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 19 partitions (state.change.logger)
[2023-04-04 11:10:51,452] INFO [Broker id=0] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 9 (state.change.logger)
[2023-04-04 11:10:51,452] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 7 (state.change.logger)
[2023-04-04 11:10:51,670] INFO [Broker id=2] Add 55 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 0 (state.change.logger)
[2023-04-04 11:10:51,691] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:51,719] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-3 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,793] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-18 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,802] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition TestTopic-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,811] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-39 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,821] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-9 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,832] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-24 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,842] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-27 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,853] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-42 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,864] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-12 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,876] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-33 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,890] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-48 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,900] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-21 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,908] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition TestTopic-3 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,919] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-36 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,927] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-6 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,938] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-45 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,948] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-15 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,958] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-30 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,968] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 0 epoch 8 for partition __consumer_offsets-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-04-04 11:10:51,978] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 0 epoch 8 with correlation id 1 for 0 partitions (state.change.logger)
[2023-04-04 11:10:51,988] INFO [Broker id=2] Finished LeaderAndIsr request in 297ms correlationId 1 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:51,992] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 2 (state.change.logger)
[2023-04-04 11:10:51,994] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:51,998] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 8 as part of the become-leader transition for 19 partitions (state.change.logger)
[2023-04-04 11:10:52,005] INFO [Broker id=2] Leader __consumer_offsets-3 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,015] INFO [Broker id=2] Leader __consumer_offsets-18 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,021] INFO [Broker id=2] Leader TestTopic-0 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,023] INFO [Broker id=2] Leader __consumer_offsets-39 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,026] INFO [Broker id=2] Leader __consumer_offsets-9 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,029] INFO [Broker id=2] Leader __consumer_offsets-24 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,032] INFO [Broker id=2] Leader __consumer_offsets-27 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,036] INFO [Broker id=2] Leader __consumer_offsets-42 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,039] INFO [Broker id=2] Leader __consumer_offsets-12 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,041] INFO [Broker id=2] Leader __consumer_offsets-33 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,044] INFO [Broker id=2] Leader __consumer_offsets-48 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,049] INFO [Broker id=2] Leader __consumer_offsets-21 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,052] INFO [Broker id=2] Leader TestTopic-3 with topic id Some(tMaohbqVTs2r57iZV1PTCA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,055] INFO [Broker id=2] Leader __consumer_offsets-36 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,057] INFO [Broker id=2] Leader __consumer_offsets-6 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,061] INFO [Broker id=2] Leader __consumer_offsets-45 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,066] INFO [Broker id=2] Leader __consumer_offsets-15 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,071] INFO [Broker id=2] Leader __consumer_offsets-30 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,076] INFO [Broker id=2] Leader __consumer_offsets-0 with topic id Some(Cn_O8MgyQHikeTSIEgaGZg) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:10:52,106] INFO [Broker id=2] Finished LeaderAndIsr request in 112ms correlationId 3 from controller 0 for 19 partitions (state.change.logger)
[2023-04-04 11:10:52,112] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 8 with correlation id 4 (state.change.logger)
[2023-04-04 11:14:01,503] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 11:14:09,748] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger)
[2023-04-04 11:14:09,748] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-04-04 11:14:15,938] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1) for 0 partitions (state.change.logger)
[2023-04-04 11:14:15,938] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-04-04 11:14:26,823] INFO [Controller id=0 epoch=1] Changed partition TestTopic-4 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:26,823] INFO [Controller id=0 epoch=1] Changed partition TestTopic-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:26,823] INFO [Controller id=0 epoch=1] Changed partition TestTopic-1 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:26,823] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:26,823] INFO [Controller id=0 epoch=1] Changed partition TestTopic-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:26,823] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:14:26,826] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:14:26,851] INFO [Controller id=0 epoch=1] Changed partition TestTopic-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:26,851] INFO [Controller id=0 epoch=1] Changed partition TestTopic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:26,851] INFO [Controller id=0 epoch=1] Changed partition TestTopic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:26,851] INFO [Controller id=0 epoch=1] Changed partition TestTopic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:26,851] INFO [Controller id=0 epoch=1] Changed partition TestTopic-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:26,852] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:14:26,854] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:14:26,854] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:14:26,854] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 5 partitions (state.change.logger)
[2023-04-04 11:14:26,855] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:14:26,858] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 11:14:26,858] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 11:14:26,859] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 11:14:26,878] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 0 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-04-04 11:14:26,884] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 1 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 11:14:26,887] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 0 epoch 1 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-04-04 11:14:26,984] INFO [Broker id=0] Leader TestTopic-1 with topic id Some(FWWi6J3KSpSI56TAJFh4dw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:26,984] INFO [Broker id=2] Leader TestTopic-2 with topic id Some(FWWi6J3KSpSI56TAJFh4dw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:26,987] INFO [Broker id=1] Leader TestTopic-0 with topic id Some(FWWi6J3KSpSI56TAJFh4dw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:27,003] INFO [Broker id=2] Finished LeaderAndIsr request in 146ms correlationId 1 from controller 0 for 1 partitions (state.change.logger)
[2023-04-04 11:14:27,004] INFO [Broker id=0] Leader TestTopic-4 with topic id Some(FWWi6J3KSpSI56TAJFh4dw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:27,009] INFO [Broker id=1] Leader TestTopic-3 with topic id Some(FWWi6J3KSpSI56TAJFh4dw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:27,014] INFO [Broker id=0] Finished LeaderAndIsr request in 157ms correlationId 3 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 11:14:27,015] INFO [Broker id=2] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2 (state.change.logger)
[2023-04-04 11:14:27,021] INFO [Broker id=0] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4 (state.change.logger)
[2023-04-04 11:14:27,023] INFO [Broker id=1] Finished LeaderAndIsr request in 166ms correlationId 2 from controller 0 for 2 partitions (state.change.logger)
[2023-04-04 11:14:27,031] INFO [Broker id=1] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 3 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,975] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,976] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-04-04 11:14:37,977] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:14:37,978] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:14:38,042] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,042] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,042] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,042] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,042] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,043] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,044] INFO [Controller id=0 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-04-04 11:14:38,045] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:14:38,045] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 1 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:14:38,045] INFO [Controller id=0 epoch=1] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:14:38,045] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 50 partitions (state.change.logger)
[2023-04-04 11:14:38,047] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:14:38,047] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:14:38,048] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 0 for 16 partitions (state.change.logger)
[2023-04-04 11:14:38,050] INFO [Broker id=0] Handling LeaderAndIsr request correlationId 5 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:14:38,076] INFO [Broker id=0] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 0 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 11:14:38,089] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 4 from controller 0 epoch 1 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-04-04 11:14:38,091] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 0 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-04-04 11:14:38,116] INFO [Broker id=0] Leader __consumer_offsets-3 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,118] INFO [Broker id=1] Leader __consumer_offsets-35 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,119] INFO [Broker id=2] Leader __consumer_offsets-37 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,134] INFO [Broker id=0] Leader __consumer_offsets-18 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,136] INFO [Broker id=1] Leader __consumer_offsets-5 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,140] INFO [Broker id=2] Leader __consumer_offsets-7 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,154] INFO [Broker id=0] Leader __consumer_offsets-39 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,155] INFO [Broker id=1] Leader __consumer_offsets-20 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,165] INFO [Broker id=2] Leader __consumer_offsets-22 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,174] INFO [Broker id=1] Leader __consumer_offsets-41 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,175] INFO [Broker id=0] Leader __consumer_offsets-9 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,183] INFO [Broker id=2] Leader __consumer_offsets-10 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,191] INFO [Broker id=1] Leader __consumer_offsets-29 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,191] INFO [Broker id=0] Leader __consumer_offsets-24 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,200] INFO [Broker id=2] Leader __consumer_offsets-31 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,210] INFO [Broker id=0] Leader __consumer_offsets-27 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,212] INFO [Broker id=1] Leader __consumer_offsets-44 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,224] INFO [Broker id=2] Leader __consumer_offsets-46 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,233] INFO [Broker id=0] Leader __consumer_offsets-42 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,233] INFO [Broker id=1] Leader __consumer_offsets-14 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,243] INFO [Broker id=2] Leader __consumer_offsets-1 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,249] INFO [Broker id=0] Leader __consumer_offsets-12 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,249] INFO [Broker id=1] Leader __consumer_offsets-2 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,259] INFO [Broker id=2] Leader __consumer_offsets-16 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,264] INFO [Broker id=0] Leader __consumer_offsets-33 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,265] INFO [Broker id=1] Leader __consumer_offsets-23 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,273] INFO [Broker id=2] Leader __consumer_offsets-19 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,279] INFO [Broker id=0] Leader __consumer_offsets-48 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,279] INFO [Broker id=1] Leader __consumer_offsets-38 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,291] INFO [Broker id=2] Leader __consumer_offsets-34 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,296] INFO [Broker id=1] Leader __consumer_offsets-8 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,297] INFO [Broker id=0] Leader __consumer_offsets-21 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,307] INFO [Broker id=2] Leader __consumer_offsets-4 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,312] INFO [Broker id=1] Leader __consumer_offsets-11 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,319] INFO [Broker id=0] Leader __consumer_offsets-36 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,326] INFO [Broker id=2] Leader __consumer_offsets-25 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,337] INFO [Broker id=1] Leader __consumer_offsets-26 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,337] INFO [Broker id=0] Leader __consumer_offsets-6 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,345] INFO [Broker id=2] Leader __consumer_offsets-40 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,354] INFO [Broker id=1] Leader __consumer_offsets-47 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,357] INFO [Broker id=0] Leader __consumer_offsets-45 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,368] INFO [Broker id=2] Leader __consumer_offsets-43 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,373] INFO [Broker id=0] Leader __consumer_offsets-15 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,373] INFO [Broker id=1] Leader __consumer_offsets-17 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,383] INFO [Broker id=2] Leader __consumer_offsets-13 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,391] INFO [Broker id=0] Leader __consumer_offsets-30 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,392] INFO [Broker id=1] Leader __consumer_offsets-32 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,406] INFO [Broker id=2] Leader __consumer_offsets-28 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,422] INFO [Broker id=2] Leader __consumer_offsets-49 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,423] INFO [Broker id=1] Finished LeaderAndIsr request in 375ms correlationId 4 from controller 0 for 16 partitions (state.change.logger)
[2023-04-04 11:14:38,429] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 5 (state.change.logger)
[2023-04-04 11:14:38,432] INFO [Broker id=0] Leader __consumer_offsets-0 with topic id Some(ifvPAsCiR0ucRAvWQvuaVw) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [0], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-04-04 11:14:38,447] INFO [Broker id=2] Finished LeaderAndIsr request in 400ms correlationId 3 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:14:38,454] INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4 (state.change.logger)
[2023-04-04 11:14:38,471] INFO [Broker id=0] Finished LeaderAndIsr request in 422ms correlationId 5 from controller 0 for 17 partitions (state.change.logger)
[2023-04-04 11:14:38,474] INFO [Broker id=0] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 6 (state.change.logger)
[2023-04-04 11:16:36,162] INFO [Controller id=0 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:16:36,432] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-04-04 11:16:36,461] INFO [Controller id=2 epoch=2] Sending LeaderAndIsr request to broker 1 with 18 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:16:36,462] INFO [Controller id=2 epoch=2] Sending LeaderAndIsr request to broker 2 with 18 become-leader and 0 become-follower partitions (state.change.logger)
[2023-04-04 11:16:36,462] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 36 partitions (state.change.logger)
[2023-04-04 11:16:36,464] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 18 partitions (state.change.logger)
[2023-04-04 11:16:36,465] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 for 18 partitions (state.change.logger)
[2023-04-04 11:16:36,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition TestTopic-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-16 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-13 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-46 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-43 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-10 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition TestTopic-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-22 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-19 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition TestTopic-3 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-49 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-31 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-28 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-25 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-7 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-40 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-37 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-20 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-4 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-34 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-5 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,466] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,467] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-35 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,467] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 2 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-04-04 11:16:36,467] INFO [Broker id=2] Finished LeaderAndIsr request in 3ms correlationId 1 from controller 2 for 18 partitions (state.change.logger)
[2023-04-04 11:16:36,467] INFO [Broker id=1] Finished LeaderAndIsr request in 3ms correlationId 1 from controller 2 for 18 partitions (state.change.logger)
[2023-04-04 11:16:36,470] INFO [Broker id=2] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 11:16:36,470] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 2 with correlation id 2 (state.change.logger)
[2023-04-04 11:16:36,522] INFO [Controller id=2 epoch=2] Partition TestTopic-4 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,522] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,522] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,522] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,522] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,522] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition TestTopic-1 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,523] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 0 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:16:36,524] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-04-04 11:16:36,525] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 2 with correlation id 3 (state.change.logger)
[2023-04-04 11:16:36,526] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 2 with correlation id 3 (state.change.logger)
[2023-04-04 11:16:36,553] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,555] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,555] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,555] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,555] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,555] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,556] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,556] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,556] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,556] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,556] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,556] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,557] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,557] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,557] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,557] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,557] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,558] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,558] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:16:36,559] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:18:56,660] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:18:56,932] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:18:56,942] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition TestTopic-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,948] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,948] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,948] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,949] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,949] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,949] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,949] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition TestTopic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,950] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,950] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,950] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,950] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,951] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,951] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,951] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,951] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,952] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,952] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition TestTopic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,952] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,952] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,953] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,953] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,953] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,953] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,954] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,955] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,955] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,962] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition TestTopic-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition TestTopic-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,962] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,963] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,963] ERROR [Controller id=2 epoch=2] Controller 2 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-04-04 11:18:56,963] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-04-04 11:18:56,980] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,980] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,980] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,980] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,980] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition TestTopic-3 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition TestTopic-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,981] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,982] INFO [Controller id=2 epoch=2] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-04-04 11:18:56,982] INFO [Controller id=2 epoch=2] Sending UpdateMetadata request to brokers HashSet(2) for 18 partitions (state.change.logger)
[2023-04-04 11:18:56,983] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 2 with correlation id 4 (state.change.logger)
